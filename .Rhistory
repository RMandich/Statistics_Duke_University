install.packages('devtools')
install.packages('shiny')
install.packages('StatswithR/statsr')
install_github("StatsWithR/statsr")
install.packages('StatsWithR/statsr')
install_github("StatsWithR/statsr")
install.packages("broom")
install.packages("gridExtra")
install.packages("cubature")
library(devtools)
install_github("StatsWithR/statsr")
install_github("StatsWithR/statsr")
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
force(arbuthnot)
arbuthnot
View(arbuthnot)
dim(arbuthnot)
library(dplyr)
library(ggplot2)
library(statsr)
View(arbuthnot)
dim(arbuthnot)
names(arbuthnot)
arbuthnot$boys
arbuthnot$girls
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
?ggplot
5218 + 4683
arbuthnot$boys + arbuthnot$girls
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line()
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line() +
geom_point()
ggplot(data = arbuthnot) +
geom_line(mapping = aes(x = year, y = boys))
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
View(arbuthnot)
ggplot(data = arbuthnot) +
geom_line(mapping = aes(x = year, y = boys/total))
View(arbuthnot)
data(present)
force(present)
names(present)
range(present$year)
View(present)
present <- present %>%
mutate(total <- boys + girls)
present <- present %>%
mutate(total = boys + girls)
View(present)
rm(present)
data(present)
force(present)
present <- present %>%
mutate(total = boys + girls)
present <- present %>%
mutate(prop_boys = boys / total)
present <- present %>%
mutate(total = boys + girls)
present <- present %>%
mutate(prop_boys = boys / total)
ggplot(data = present) +
geom_line(mapping = aes(x = year, y = prop_boys))
present <- present %>%
mutate(more_boys = boys > girls)
present <- present %>%
mutate(prop_boy_girl = boys / girls)
present <- present %>%
mutate(prop_boy_girl = boys / girls)
ggplot(data = present) +
geom_line(mapping = aes(x = year, y = prop_boy_girl))
present <- present %>%
mutate(total = boys + girls) %>%
arrange(desc(total))
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
force(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram()
sfo_feb_flights %>%
summarise(delay_mode = mode(arr_delay), max_delay(arr_delay), median_delay(arr_delay))
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram()
sfo_feb_flights %>%
summarise(delay_mode = mode(arr_delay), max_delay = max(arr_delay), median_delay = median(arr_delay))
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram()
sfo_feb_flights %>%
summarise(max_delay = max(arr_delay), median_delay = median(arr_delay))
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(median_ad = median(arr_delay), iqr_ad = IQR(arr_delay))
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
names(nycflights)
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
head(nycflights)
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
nycflights %>%
group_by(tailnum) %>%
summarise(max_avg_speed = mean(avg_speed)) %>%
arrange(desc(avg_speed))
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
nycflights %>%
group_by(tailnum) %>%
summarise(max_avg_speed = max(avg_speed)) %>%
arrange(desc(avg_speed))
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
nycflights %>%
group_by(tailnum) %>%
summarise(max_avg_speed = max(avg_speed)) %>%
arrange(desc(avg_speed))
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
nycflights %>%
group_by(tailnum) %>%
summarise(max_avg_speed = max(avg_speed)) %>%
arrange(desc(avg_speed))
head(nycflights)
nycflights %>%
summarise(max_avg_speed = max(avg_speed)) %>%
arrange(desc(avg_speed))
nycflights %>%
summarise(max_avg_speed = max(avg_speed))
nycflights %>%
select(avg_speed, tailnum)
order_by(desc(avg_speed))
nycflights %>%
select(avg_speed, tailnum)
order_by(desc(avg_speed))
nycflights %>%
select(avg_speed, tailnum)
arrange(desc(avg_speed))
nycflights %>%
select(max(avg_speed), tailnum)
nycflights %>%
select(avg_speed, tailnum)
nycflights %>%
select(avg_speed, tailnum)
arrange(desc(avg_speed))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
select(avg_speed, tailnum)
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60)) %>%
select(avg_speed, tailnum)
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60)) %>%
select(avg_speed, tailnum)
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60)) %>%
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
nycflights %>%
select(avg_speed, tailnum)
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
data(nycflights)
force(nycflights)
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
nycflights %>%
select(avg_speed, tailnum)
nycflights %>%
select(avg_speed, tailnum) %>%
summarise(max_avg_speed = max(avg_speed))
nycflights %>%
summarise(max_avg_speed = max(avg_speed)) %>%
select(max_avg_speed, tailnum)
nycflights %>%
summarise(max_avg_speed = max(avg_speed)) %>%
select(max_avg_speed)
nycflights %>%
summarise(max_avg_speed = max(avg_speed)) %>%
select(avg_speed, tailnum)
nycflights %>%
select(avg_speed, tailnum)
nycflights %>%
select(avg_speed, tailnum)
arrange(desc(avg_speed))
head(nycflights)
ggplot(data = nycflights) +
geom_point(mapping = aes(x = avg_speed, y = distance))
ggplot(data = nycflights) +
geom_point(mapping = aes(x = distance, y = avg_speed))
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
nycflights %>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
nycflights %>%
group_by(arr_type) %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
nycflights %>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
nycflights %>%
select(avg_speed, tailnum)
arrange(desc(avg_speed))
nycflights %>%
select(avg_speed, tailnum)
?order_by
nycflights %>%
select(avg_speed, tailnum)
arrange(avg_speed)
nycflights %>%
select(avg_speed, tailnum)
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
nycflights %>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
head(nycflights)
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
nycflights <- nycflights %>%
mutate(avg_speed = distance / (air_time/60))
#nycflights %>%
# select(avg_speed, tailnum)
# arrange(desc(avg_speed))
# This code is correct but R is giving me trouble and I have no idea why, so i'm commenting just to knit and will check later
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
force(kobe_basket)
kobe_streak <- calc_streak(kobe_basket$shot)
ggplot(data = kobe_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
kope_streak
kobe_streak
kobe_streak %>%
summarise(mediana = median(length))
kobe_streak %>%summarise(mediana = median(length))
kobe_streak %>%
summarise(iqr1 = IQR(length))
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(coin_outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,
prob = c(0.2, 0.8))
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,
prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 1, replace = TRUE)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE,
prob = c("H" = 0.45, "M" = 0.55))
table(sim_basket)
sim_streak <- calc_streak(sim_basket)
View(sim_streak)
ggplot(data = sim_streak) +
geom_histogram(mapping = aes(x = lenght))
ggplot(data = sim_streak) +
geom_histogram
ggplot(data = sim_streak) +
geom_histogram()
ggplot(data = sim_streak) +
geom_histogram(mapping = aes(x = sim_streak))
View(sim_streak)
ggplot(data = sim_streak) +
geom_histogram(mapping = aes(x = length))
